import { request } from "http";
import { ApiClient, HttpMethod, RequestOpetins } from "./Client";
import { APIRequestContext, test } from '@playwright/test';
import { Response } from "./Response";

export class PlaywrightApiClient implements ApiClient {
    constructor(private request: APIRequestContext) {
    }


    sendRequest(
        method: HttpMethod,
        url: string,
        options?: RequestOpetins): Promise<Response> {
        return test.step(`Request ${method} ${url}`, async () => {
            const response = await this.request[(method.toLowerCase()) as 'get'](url, {}
                data: options?.data,
                param: options?.params,
            });
        let responceBody: Record<string, any> | string;
        try {
            responceBody = await response.json();
        } catch (error) {
            responceBody = await response.text();
        }

        return new Response({
            status: response.status(),
            headers: response.headers(),
            body: responceBody,
        })
    });

